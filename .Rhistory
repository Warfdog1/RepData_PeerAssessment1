help()
hist(west$pm25, col = "green")
west <- subset(pollution, region=="west")
hist(subset(pollution,region=="west")$pm25, col = "green")
library(swirl)
swirl()
with(pollution, plot(latitude,pm25))
abline(12, lwd=2, lty=2)
abline(12, lwd=2, lty=2)
?abline
abline(h=12, lwd=2, lty=2)
plot(pollution$latitude,ppm, col=pollution$region)
abline(h=12, lwd=2, lty=2)
par(mfrow=c(1,2), mar=c(5,4,2,1))
west<-subset(pollution=="west")
west<-subset(pollution, region=="west")
plot(west$latitude, west$pm25, main="West")
east<-subset(pollution, region=="east")
plot(east$latitude, east$pm25, main = "East")
?Devices
faithful(plot(eruptions, waiting))
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.copy(png, file set = "geyserplot.png")
dev.copy(png, "geyserplot.png")
dev.copy(png, file = "geyserplot.png")
dev.off()
head(cars)
with(cars, plot(speed,dist))
text(mean(cars$speed,max(cars$dist), "SWIRL rules!")
text(mean(cars$speed,max(cars$dist), main="SWIRL rules!")
text(mean(cars$speed,max(cars$dist), main="SWIRL rules!")
text(mean(cars$speed,max(cars$dist), main="SWIRL rules!")
text(mean(cars$speed),max(cars$dist), main="SWIRL rules!")
text(mean(cars$speed),max(cars$dist),"SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, data=state, layout=c(4,1))
xyplot(Life.Exp ~ Income | region, data=state, layout=c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data=mpg)
library(swirl)
swirl()
head(airquality)
range(airquality$Ozone,na.rm=TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone(ppb)", col.axis="blue"), col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone(ppb)", col.axis="blue", col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone
| (ppb)",col.axis="blue",col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone
| (ppb)",col.axis="blue",col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone
(ppb)",col.axis="blue",col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone
(ppb)", col.axis="blue", col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
title(main = "Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City")
length(par())
librar(swirl)
library(swirl)
swirl()
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone,type="n")
title(main="Wind and Ozone in NYC")
may <- subset(airquality[5])
may <- subset(airquality, Month==5)
plot(may, wind, ozone, col="blue")
plot(may, wind, ozone, col="blue")
info()
library(swirl)
swirl()
?par
?par()
View(may)
points(may$Wind,may$Ozone,col="blue",pch=17)
View(pollution)
notmay <- subset(airquality, Month!=5)
points(notmay$wind, notmay$ozone, pch=15)
points(notmay$wind, notmay$ozone, pch=8)
points(notmay$wind, notmay$ozone, pch=8, col="red")
points(notmay$Wind, notmay$Ozone, pch=8, col="red")
legend("topright", c(17,8), ("blue", "red"), ("May", "Other Months"))
legend("topright", c(17,8), c("blue", "red"), c("May", "Other Months"))
legend("topright", c(pch=17,8), c(col="blue", "red"), c(legend="May", "Other Months"))
View(may)
legend("topright", pch=c(17,8), col=c("blue", "red"), legend=c("May", "Other Months"))
abline(airquality$Wind, lty=2, lwd=2)
abline(v=airquality$Wind, lty=2, lwd=2)
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow=(1,2))
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Ozone,airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind, airquality$Ozone, "Ozone and Wind")
View(pollution)
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, title="Ozone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main="Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main="Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer=TRUE)
library(datasets)
library(lattice)
class(xyplot)
xyplot()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
nlme()
?axis
?lpoints
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
?trell
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality
)
?facets
?geom
library(ggplot2)
?geom
??geom
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + geom_smooth()
library(swirl)
swirl9
swirl()
head(airquality)
xyplot(Ozone~Wind, airquality)
xyplot(Ozone~Wind, airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone~Wind | as.factor (Month), airquality, c(5,1))
xyplot(Ozone~Wind | as.factor (Month), data = airquality, layout = c(5,1))
xyplot(Ozone~Wind | Month, data = airquality, layout = c(5,1))
p <- xyplot(Ozone~Wind,data=airquality)
print(p)
names(p)
mynames[myfull]
p[["formula"]]
p[[x.limits]]
p[["x.limits"]]
table(f)
if(!file.exists('activity.csv))
unzip('activity.zip')
if(!file.exists('activity.csv'))
unzip('activity.zip')
setwd('C:/Users/FWarf/Reproducible Research/PeerAssessment1)
if(!file.exists('activity.csv'))
setwd('C:/Users/FWarf/Reproducible Research/PeerAssessment1)
activitydata<- read.csv('activity.csv')
setwd('C:/Users/FWarf/Reproducible Research/PeerAssessment1)
activitydata<- read.csv('activity.csv')
setwd('C:/Users/FWarf/Reproducible Research/PeerAssessment1')
activitydata<- read.csv('activity.csv')
activitydata<- read.csv(unz(./'activity.zip,'activity.csv'))
activitydata<- read.csv(unz(./'activity.zip','activity.csv'))
activity.df<- read.csv(unz(./'activity.zip','activity.csv'))
setwd('C:/Users/FWarf/Reproducible Research/PeerAssessment1')
activity.df<- read.csv(unz(./'activity.zip','activity.csv'))
setwd('C:/Users/FWarf/Reproducible Research/PeerAssessment1')
setwd('C:/Users/FWarf/Reproducible Research/PeerAssessment1')
list.files()
activity.df<- read.csv(unz(./'activity.zip','activity.csv'))
activity.df<- read.csv(unz(./'activity.zip','activity.csv'))
activity.df<- read.csv(unz('./activity.zip','activity.csv'))
activity.df$date <- as.Date(activity.df$date)
view (activity.df)
view(activity.df)
View(activity.df)
View(activity.df)
View(activity.df)
dailysteps <- aggregate(steps ~ date, sum)
dailysteps <- aggregate(steps ~ date, activity.df, sum)
colnames(dailysteps) <- c('steps', 'date')
head(dailysteps)
dailysteps <- aggregate(steps ~ date, activity.df, sum)
colnames(dailysteps) <- c('date', 'steps')
head(dailysteps)
Library(ggplot2)
library(ggplot2)
View(dailysteps)
hist(dailtysteps$steps, main = "Total Steps Taken Per Day", xlab = "Steps")
hist(dailysteps$steps, main = "Total Steps Taken Per Day", xlab = "Steps")
?hist
hist(dailysteps$steps, main = "Total Steps Taken Per Day", xlab = "Steps", breaks=20)
hist(dailysteps$steps, main = "Total Steps Taken Per Day", xlab = "Steps", breaks=53)
View(dailysteps)
hist(dailysteps$steps, main = "Total Steps Taken Per Day", xlab = "Steps Per Day", breaks=100)
hist(dailysteps$steps, main = "Total Steps Taken Per Day", xlab = "Steps Per Day", breaks=53)
hist(dailysteps$steps, main = "Total Steps Taken Per Day", xlab = "Steps Per Day", breaks=40)
hist(dailysteps$steps, main = "Total Steps Taken Per Day", xlab = "Steps Per Day", breaks=30)
hist(dailysteps$steps, main = "Total Steps Taken Per Day", xlab = "Steps Per Day", breaks=53)
hist(dailysteps$steps, main = "Total Steps Taken Per Day", xlab = "Steps Per Day", breaks=53, col='blue')
hist(dailysteps$steps, main = "Total Steps Taken Per Day", xlab = "Steps Per Day", ylab = "Frequency as Days", breaks=53, col='blue')
hist(dailysteps$steps, main = "Total Steps Taken Per Day", xlab = "Steps Per Day", ylab = "Frequency", breaks=53, col='blue')
hist(dailysteps$steps, main = "Total Daily Steps Recorded", xlab = "Steps Per Day", ylab = "Frequency", breaks=53, col='blue')
hist(dailysteps$steps, main = "Total Daily Steps Recorded", xlab = "Recorded Daily Steps", ylab = "Frequency", breaks=53, col='blue')
dailysteps_mean <- mean(dailysteps)
dailysteps_mean <- mean(dailysteps$steps)
view(dailysteps_mean)
print(dailysteps_mean)
dailysteps_median <- median(dailysteps$steps)
print(dailysteps_median)
View(dailysteps)
View(dailysteps)
dailysteps_mean <- mean(dailysteps$steps)
dailysteps_median <- median(dailysteps$steps)
dailysteps_median <- median(dailysteps$steps, na.rm=FALSE)
View(dailysteps)
View(activity.df)
###1. Ignoring days with missing values, calculate the number of steps taken daily and review.
plot(dailysteps, type="1")
?"plot"
View(activity.df)
plot(activity.df["interval", "date"], type="1")
plot(activity.df["interval", "steps"], type="1")
intervalsteps <- aggregate(steps ~ interval, data = activity, FUN = mean)
intervalsteps <- aggregate(steps ~ interval, data = activity.df, FUN = mean)
plot(intervalsteps, type = "1")
plot(interval,steps, type = "1")
View(intervalsteps)
View(intervalsteps)
intervalsteps <- aggregate(steps ~ interval, data = activity.df, FUN = mean, rm.na = TRUE)
plot(interval,steps, type = "1")
?"plot"
View(intervalsteps)
View(intervalsteps)
intervalsteps <- aggregate(interval ~ steps, data = activity.df, FUN = mean, rm.na = TRUE)
plot(interval,steps, type = "1")
plot(intervalsteps[interval,steps], type = "1")
View(intervalsteps)
View(intervalsteps)
intervalsteps <- aggregate(steps ~ interval, data = activity.df, FUN = mean, rm.na = TRUE)
View(intervalsteps)
plot(intervalsteps, type = "1")
View(activity.df)
intervalsteps <- aggregate(interval  ~  steps, data = activity.df, FUN = mean, rm.na = TRUE)
View(dailysteps)
intervalsteps <- aggregate(steps  ~  interval, data = activity.df, FUN = mean, rm.na = TRUE)
?plot
plot(intervalsteps, type = "l")
plot(intervalsteps, type = "l", xlab = "Interval in 5 Minute Increments", breaks = 288)
plot(intervalsteps, type = "l", xlab = "Intervals in 5 Minute Increments"")
plot(intervalsteps, type = "l", xlab = "Intervals in 5 Minute Increments")
intervalsteps <- aggregate(steps  ~  interval, data = activity.df, FUN = mean, rm.na = TRUE)
plot(intervalsteps, type = "l", xlab = "Intervals in 5 Minute Increments")
max_interval <- which.max(intervalsteps$steps)
print(max_interval)
max_interval <- which.max(activity.df$steps)
print(max_interval)
intervalsteps$interval[ which.max(intervalsteps$steps)]
print(intervalsteps)
View(intervalsteps)
View(activity.df)
sum(is.naactivity.df$steps)
sum(is.na(activity.df$steps))
newfile<- transcan(activity.df, "steps")
?transcan
View(intervalsteps)
library(Hmisc)
imputed.activity.df <- irmi(activity.df)
?irmi
??irmi
library(VIM)
activity_imputed <- activity.df
activity_imputed$steps <- impute(activity.df$steps, fun=mean)
na_activity <- merge(activity.df, intervalsteps, by = "interval")
View(na_activity)
View(na_activity)
na_activity <- merge(activity.df, intervalsteps, by = "interval", suffixes = c("",".y"))
View(na_activity)
na <- is.na(na_activity$steps)
na_activity <- merge(activity.df, intervalsteps, by = "interval", suffixes = c("",".y"))
na <- is.na(na_activity$steps)
na_activity$steps[na]<- na_activity$steps.y[na]
na_activity <- na_activity[ , c(1:3)]
View(na_activity)
View(na_activity)
View(na_activity)
head(na_activity)
na_activity <- merge(activity.df, intervalsteps, by = "interval", suffixes = c("",".y"))
na_activity <- na_activity[ , c(1:3)]
View(na_activity)
na_activity <- merge(activity.df, intervalsteps, by = "interval", suffixes = c("",".y"))
na <- is.na(na_activity$steps)
na_activity$steps[na]<- na_activity$steps.y[na]
na_activity <- na_activity[ , c(1:3)]
head(na_activity)
View(na_activity)
totalsteps <- aggregate( steps ~ date, data = na_activity, sum)
totalsteps <- aggregate( steps ~ date, data = na_activity, sum)
hist(totalsteps$steps, main = "Total Daily Steps Taken", xlab = "Recorded Daily Steps", ylab = "Frequency by Day", breaks=53, col='blue')
hist(totalsteps$steps, main = "Total Daily Steps Taken", xlab = "Averaged Daily Steps", ylab = "Frequency by Day", breaks=53, col='blue')
hist(totalsteps$steps, main = "Total Daily Steps Taken", xlab = "Averaged Daily Steps", ylab = "Frequency by Day", breaks=53, col='red')
mean(totalsteps$steps)
median(totalsteps$steps)
While using the mean to replace the na's in the data set has little impact on the mean and median value for this particular assignment, it does impact the graphical presentation of the data. In the first data set assignment, there were only 3 days where the participant had 10500 to 11000 steps. In the second assginment, there were more than 10 days of 10500 to 11000 steps.
View(activity.df)
activity.df$day <- as.factor(ifelse(weekdays(activity.df$date)=='Saturday' | (weekdays(activity.df$date)=='Sunday', 'weekend', weekday))
activity.df$day <- as.factor(ifelse(weekdays(activity.df$date)=='Saturday' | (weekdays(activity.df$date)=='Sunday', 'weekend', 'weekday'))
activity.df$day <- as.factor(ifelse(weekdays(activity.df$date)=='Saturday' | weekdays(activity.df$date)=='Sunday', 'weekend', 'weekday'))
View(activity.df)
head(activity.df)
str(activity.df)
head(activity.df)
View(activity.df)
library(ggplot2)
View(activity.df)
activityaveraged <- aggregate (steps ~ interval + day, data=activity.df, FUN=mean)
View(activityaveraged)
type="l",
lwd=1,
xlab="Interval",
ylab="Number of steps",
layout=c(1,2))
View(activityaveraged)
View(activityaveraged)
type="l",
lwd=1,
xlab="Interval",
ylab="Number of steps",
layout=c(1,2))
plot(activityaveraged, interval, steps | day
type="l",
lwd=1,
xlab="Interval",
ylab="Number of steps",
layout=c(1,2))
xyplot(activityaveraged, interval, steps | day
type="l",
lwd=1,
xlab="Interval",
ylab="Number of steps",
layout=c(1,2))
with(activityaveraged, plot(interval, steps | day
type="l",
lwd=1,
xlab="Interval",
ylab="Number of steps",
layout=c(1,2))
with(activityaveraged, plot(interval, steps
type="l",
lwd=1,
xlab="Interval",
ylab="Number of steps",
layout=c(1,2))
with(activityaveraged, plot(interval, steps)
type="l",
lwd=1,
xlab="Interval",
ylab="Number of steps",
layout=c(1,2))
with(activityaveraged, plot(interval, steps))
with(activityaveraged, plot(interval, steps))
(type="l",
lwd=1,
xlab="Interval",
ylab="Number of steps",
layout=c(1,2))
type="l",
layout=c(1,2)
lwd=1,
xlab="Interval",
ylab="Number of steps")
xyplot(steps ~ interval | day, activityaveraged,
type="l",
layout=c(1,2)
lwd=1,
xlab="Interval",
ylab="Number of steps")
activityaveraged <- aggregate (steps ~ interval + day, data=activity.df, FUN=mean)
activityaveraged <- aggregate (steps ~ interval + day, data=activity.df, FUN=mean)
xyplot(steps ~ interval | day, activityaveraged,
type="l",
layout=c(1,2)
lwd=1,
xlab="Interval",
ylab="Number of steps")
xyplot(steps ~ interval | day, activityaveraged,
type="l",
layout=c(1,2),
lwd=1,
xlab="Interval",
ylab="Number of steps")
plot(steps ~ interval | day, activityaveraged,
type="l",
layout=c(1,2),
lwd=1,
xlab="Interval",
ylab="Number of steps")
View(activityaveraged)
View(activityaveraged)
plot(interval ~ steps | day, activityaveraged,
type="l",
layout=c(1,2),
lwd=1,
xlab="Interval",
ylab="Number of steps")
activityaveraged <- aggregate (steps ~ interval + day, data=activity.df, FUN=mean)
xyplot(interval ~ steps | day, activityaveraged,
type="l",
layout=c(1,2),
lwd=1,
xlab="Interval",
ylab="Number of steps")
xyplot(interval ~ steps | day, activityaveraged,
type="l",
layout=c(1,2),
lwd=1,
xlab="Interval",
ylab="Number of steps")
library(lattice)
xyplot(interval ~ steps | day, activityaveraged,
type="l",
layout=c(1,2),
lwd=1,
xlab="Interval",
ylab="Number of steps")
xyplot(step ~ interval | day, activityaveraged,
type="l",
layout=c(1,2),
lwd=1,
xlab="Interval",
ylab="Number of steps")
activityaveraged <- aggregate (steps ~ interval + day, data=activity.df, FUN=mean)
activityaveraged <- aggregate (steps ~ interval + day, data=activity.df, FUN=mean)
xyplot(step ~ interval | day, activityaveraged,
type="l",
layout=c(1,2),
lwd=1,
xlab="Interval",
ylab="Number of steps")
library(lattice)
activityaveraged <- aggregate (steps ~ interval + day, data=activity.df, FUN=mean)
xyplot(step ~ interval | day, activityaveraged,
type="l",
layout=c(1,2),
lwd=1,
xlab="Interval",
ylab="Number of steps")
xyplot(step ~ interval | day, activityaveraged,
type="l",
layout=c(1,2),
lwd=1,
xlab="Interval",
ylab="Number of steps")
View(activityaveraged)
xyplot(steps ~ interval | day, activityaveraged,
type="l",
layout=c(1,2),
lwd=1,
xlab="Interval",
ylab="Number of steps")
xyplot(steps ~ interval | day, activityaveraged,
type="l",
layout=c(1,2),
lwd=1,
xlab="5 Minute Intervals over 24 Hours",
ylab="Averaged Number of steps"
col="red")
xyplot(steps ~ interval | day, activityaveraged,
type="l",
layout=c(1,2),
lwd=1,
xlab="5 Minute Intervals over 24 Hours",
ylab="Averaged Number of steps",
col="red")
xyplot(steps ~ interval | day, activityaveraged,
type="l",
layout=c(1,2),
lwd=1,
xlab="5 Minute Intervals over 24 Hours",
ylab="Averaged Number of steps",
col="green")
```
xyplot(steps ~ interval | day, activityaveraged,
type="l",
layout=c(1,2),
lwd=1,
xlab="5 Minute Intervals over 24 Hours",
ylab="Averaged Number of steps",
col="blue")
